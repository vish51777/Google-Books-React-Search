{"version":3,"sources":["components/Save/index.js","utils/API.js","components/Gallery/index.js","components/Title/index.js","components/SearchBar/index.js","pages/Search.js","components/Unsave/index.js","components/SavedGallery/index.js","components/SavedGlobal/index.js","pages/Saved.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["Save","props","react_default","a","createElement","className","onClick","saveBook","API","axios","get","id","delete","bookData","post","Gallery","title","authors","description","image","thumbnail","link","_this","this","query","items","map","item","index","_item$volumeInfo","volumeInfo","imageLinks","infoLink","bookTitle","key","components_Save","href","target","src","undefined","alt","Component","Title","SearchBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","lastQuery","_this2","fetch","concat","method","then","response","json","setState","console","log","_this3","components_Title","FormGroup","InputGroup","FormControl","type","placeholder","onChange","event","value","onKeyPress","search","Addon","Glyphicon","glyph","components_Gallery","SearchPage","components_SearchBar","Unsave","deleteSaved","SavedGallery","promiseIsResolved","filter","_id","res","data","components_Unsave","bind","SavedGlobal","components_SavedGallery","Saved","components_SavedGlobal","Nav","Link","to","window","location","pathname","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","Search","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2921e5bc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./style.css\"\n\nfunction Save(props) {\n        return <button className=\"save-btn btn-success\" onClick={() => props.saveBook(props)}>Save</button>\n}\n\nexport default Save;","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React, { Component } from 'react';\nimport Save from \"../Save\";\nimport API from \"../../utils/API\";\n\nclass Gallery extends Component {\n    saveBook(props) {\n        API.saveBook({\n            title: props.title,\n            authors: props.authors,\n            description: props.description,\n            image: props.image.thumbnail,\n            link: props.link\n          })\n    }\n    render() {\n        return (\n            <div className=\"book-list-wrapper\">\n                {\n                    this.props.query ? (\n                        <div className=\"col-sm-12\">\n                            <p className=\"search-status\">You Searched For: {this.props.query}</p>\n                        </div>\n                    ) : null\n                }\n\n                {\n                    this.props.items.map((item, index) => {\n                        let { title, imageLinks, infoLink, description, authors } = item.volumeInfo;\n                        let bookTitle = item.volumeInfo.title;\n                        return (\n                            <div key={index} className=\"col-sm-12 col-md-4 col-lg-12 book-column\">\n                                <div className=\"book-wrapper\">\n                                <Save\n                                        title={item.volumeInfo.title}\n                                        authors={item.volumeInfo.authors}\n                                        description={item.volumeInfo.description}\n                                        image={item.volumeInfo.imageLinks}\n                                        link={item.volumeInfo.infoLink}\n                                        saveBook={this.saveBook}/>\n                                    <a className=\"book\" href={infoLink} target=\"_blank\">\n                                    <div className=\"book-title white-text\">\n                                            <h3>{bookTitle}</h3>\n                                        </div>\n                                    </a>\n                                    <p className=\"authors\"><strong>Author: </strong>{authors}</p>\n                                    <div className=\"book-inner-flex\">\n                                    <a className=\"book\" href={infoLink} target=\"_blank\">\n                                        <div className=\"book-image-wrapper\">\n                                            <img src={imageLinks !== undefined ? imageLinks.thumbnail : \"\"}\n                                                alt=\"Book\"\n                                                className=\"book-image\"\n                                            />\n                                        </div>\n                                        \n                                    </a>\n                                    <div className=\"description\">                        \n                                    <div><strong>Description:</strong></div>\n                                    {description}</div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Gallery;\n","import React from \"react\";\nimport \"./style.css\"\n\nfunction Title() {\n    return (\n            <div className=\"title\">\n                <img className=\"title-position\" src=\"https://upload.wikimedia.org/wikipedia/commons/f/f1/Books_Flat_Icon_Vector.svg\" />\n                <h1 className=\"title-text title-position\">Google Books Search</h1>\n            </div>\n    )\n}\n\nexport default Title;","import React, { Component } from 'react';\nimport { FormGroup, FormControl, InputGroup, Glyphicon} from 'react-bootstrap';\nimport Gallery from '../Gallery';\nimport Title from \"../Title\";\nimport \"./style.css\";\n\n\nclass SearchBar extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            query: '',\n            items: [],\n            lastQuery: ''\n        };\n    }\n    search(){\n        const BASE_URL = 'https://www.googleapis.com/books/v1/volumes?q=';\n        fetch(`${BASE_URL}${this.state.query}`, {method: 'GET'})\n        .then(response => response.json())\n        .then(json => {\n            let {items} = json;\n            this.setState({items});\n            this.setState({lastQuery : this.state.query });\n            console.log(json);\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"global\">\n            <Title />\n                <FormGroup>\n                    <InputGroup>\n                        <FormControl \n                        type = \"text\"\n                        placeholder = \"Search for a book\"\n                        onChange = { event => this.setState({query: event.target.value})} \n                        onKeyPress = { event => {\n                            if(event.key == \"Enter\"){\n                                this.search();\n                            }\n                        }}\n                        />\n                        <InputGroup.Addon onClick={() => this.search()}>\n                            <Glyphicon glyph=\"search\"></Glyphicon>\n                        </InputGroup.Addon>\n                    </InputGroup>\n                </FormGroup>\n                <Gallery items = {this.state.items} \n                    query = {this.state.lastQuery} \n                    />   \n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React, { Component } from \"react\";\nimport SearchBar from \"../components/SearchBar\";\n\nclass SearchPage extends Component {\n    render() {\n        return (\n            <SearchBar/>\n        )\n    }\n}\n\nexport default SearchPage;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Unsave(props) {\n  return <button className=\"unsave-btn btn-danger\" onClick={() => props.deleteSaved(props)}>Unsave</button>\n};\n\nexport default Unsave;\n","import React, { Component } from 'react';\nimport Unsave from \"../Unsave\";\nimport API from \"../../utils/API\";\nimport \"./style.css\"\n\nclass SavedGallery extends Component {\n    state = {\n        items: [],\n        promiseIsResolved: false     \n    };\n\n    deleteSaved(props) {\n        API.deleteBook(props.id)\n        .then(\n             this.setState({items: this.state.items.filter(item => item._id !== props.id)}))\n    }\n\n   componentDidMount(){\n        API.getBooks().then((res => {\n            this.setState({ items: res.data})}))\n            .then(this.setState({promiseIsResolved: true}));\n    }\n\n    render() {\n        let altImage=\"https://upload.wikimedia.org/wikipedia/commons/f/f1/Books_Flat_Icon_Vector.svg\";\n\n        if(!this.state.promiseIsResolved){return null}\n        else{\n    return (\n        <div className=\"book-list-wrapper\">\n        <div className=\"col-sm-12\">\n                <p className=\"search-status\">Saved Books</p>\n        </div>\n            {  \n                this.state.items.map((item, index) => {\n                    let { authors, title, image, link, description, _id } = item;\n                    let bookTitle = item.title;\n                    return (\n                        <div key={index} className=\"col-sm-12 col-md-4 col-lg-12 book-column\">\n                            <div className=\"book-wrapper\">\n                                {<Unsave\n                                    id={item._id}\n                                    deleteSaved={this.deleteSaved.bind(this)}\n                                />}\n                                <a className=\"book\" href={link} target=\"_blank\">\n                                <div className=\"book-title white-text\">\n                                        <h3>{bookTitle}</h3>\n                                    </div>\n                                </a>\n                                <p><strong>Author: </strong>{authors}</p>\n                                <div className=\"book-inner-flex\">\n                                <a className=\"book\" href={link} target=\"_blank\">\n                                    <div className=\"book-image-wrapper\">\n                                        <img src={image[0] !== undefined ? image[0].thumbnail : altImage}\n                                            alt=\"Book Image\"\n                                            className=\"book-image\"\n                                        />\n                                    </div>\n                                    \n                                </a>\n                                <div className=\"description\">                        \n                                    <div><strong>Description:</strong></div>\n                                    {description}</div>\n                                </div>\n\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n        }\n    }\n}\n\nexport default SavedGallery;","import React, { Component } from 'react';\nimport { FormGroup, FormControl, InputGroup, Glyphicon } from 'react-bootstrap';\nimport SavedGallery from '../SavedGallery';\nimport Title from \"../Title\";\n\n\nclass SavedGlobal extends Component {\n    state = {\n        items: [],\n        promiseIsResolved: false\n    };\n\n    loadSaved() {\n\n    }\n    render() {\n        return (\n            <div className=\"global\">\n                <Title />\n                <SavedGallery items={this.state.items} />\n            </div>)\n    }\n}\n\nexport default SavedGlobal","import React, { Component } from \"react\";\nimport SavedGlobal from \"../components/SavedGlobal\";\n\nclass Saved extends Component {\n    render() {\n        return (<SavedGlobal/>)\n    }\n}\n\nexport default Saved;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <Link to=\"/\" className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\n          Search\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          to=\"/saved\"\n          className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n        >\n          Saved\n        </Link>\n      </li>\n    </ul>\n  );\n}\n\nexport default Nav;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport Nav from \"./components/Nav\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div>\n        <Nav/>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n        </Switch>\n      </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}